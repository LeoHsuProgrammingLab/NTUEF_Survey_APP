plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.relay'
    id 'kotlin-kapt'
}

android {
    compileSdk 34

    def secretsPropertiesFile = rootProject.file("local.properties")
    def secretsProperties = new Properties()
    secretsProperties.load(new FileInputStream(secretsPropertiesFile))

    defaultConfig {
        applicationId "com.example.ntufapp"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "BASE_URL", secretsProperties['BASE_URL'])
        buildConfigField("String", "API_PARAMS_TOKEN", secretsProperties['API_PARAMS_TOKEN'])
        buildConfigField("String", "CATALOGUE_API_KEY", secretsProperties['CATALOGUE_API_KEY'])
        buildConfigField("String", "PLOT_API_KEY", secretsProperties['PLOT_API_KEY'])
        buildConfigField("String", "CODE_API_KEY", secretsProperties['CODE_API_KEY'])
        buildConfigField("String", "CREATE_API_KEY", secretsProperties['CREATE_API_KEY'])

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            assets {
                srcDir('src/main/ui-packages')
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.3"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
    namespace 'com.example.ntufapp'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.12'
    //Compose
    def composeBom = platform('androidx.compose:compose-bom:2023.05.01')
    implementation composeBom

    // Local Unit Tests
    testImplementation 'androidx.test:core:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.0'
    testImplementation 'com.google.truth:truth:1.1.3'
    debugImplementation 'androidx.compose.ui:ui-tooling:1.5.0'
    debugImplementation 'androidx.compose.ui:ui-tooling:1.5.0'

    // Instrumentation Tests
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.40.5'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.40.5'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.arch.core:core-testing:2.2.0'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0'
    androidTestImplementation 'com.google.truth:truth:1.1.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test:core-ktx:1.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation composeBom

    // Choose one of the following:
    // Material Design 3
    implementation 'androidx.compose.material3:material3'
    // or skip Material Design and build directly on top of foundational components
    implementation 'androidx.compose.foundation:foundation'
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    implementation 'androidx.compose.ui:ui'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3:material3-window-size-class'

    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.6.1'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'
    // Optional - Integration with RxJava
    implementation 'androidx.compose.runtime:runtime-rxjava2'

    // Cascade Dropdown Menu
    implementation 'me.saket.cascade:cascade:2.2.0'
    implementation 'me.saket.cascade:cascade-compose:2.2.0'

    // Gson
    implementation "com.google.code.gson:gson:2.9.0"

    // Navigation
    implementation "androidx.navigation:navigation-compose:2.7.7"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.okhttp3:okhttp:4.9.0"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.0"
}